// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: proto/risk/risk.proto

package risk

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RiskCheckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Email         string                 `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	FirstName     string                 `protobuf:"bytes,3,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName      string                 `protobuf:"bytes,4,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	Phone         string                 `protobuf:"bytes,5,opt,name=phone,proto3" json:"phone,omitempty"` // Optional: add phone support
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RiskCheckRequest) Reset() {
	*x = RiskCheckRequest{}
	mi := &file_proto_risk_risk_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RiskCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiskCheckRequest) ProtoMessage() {}

func (x *RiskCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_risk_risk_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiskCheckRequest.ProtoReflect.Descriptor instead.
func (*RiskCheckRequest) Descriptor() ([]byte, []int) {
	return file_proto_risk_risk_proto_rawDescGZIP(), []int{0}
}

func (x *RiskCheckRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *RiskCheckRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *RiskCheckRequest) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *RiskCheckRequest) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *RiskCheckRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

type RiskCheckResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	IsRisky       bool                   `protobuf:"varint,2,opt,name=is_risky,json=isRisky,proto3" json:"is_risky,omitempty"`
	RiskLevel     string                 `protobuf:"bytes,3,opt,name=risk_level,json=riskLevel,proto3" json:"risk_level,omitempty"` // LOW, MEDIUM, HIGH, CRITICAL
	Reason        string                 `protobuf:"bytes,4,opt,name=reason,proto3" json:"reason,omitempty"`
	Flags         []string               `protobuf:"bytes,5,rep,name=flags,proto3" json:"flags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RiskCheckResponse) Reset() {
	*x = RiskCheckResponse{}
	mi := &file_proto_risk_risk_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RiskCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiskCheckResponse) ProtoMessage() {}

func (x *RiskCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_risk_risk_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiskCheckResponse.ProtoReflect.Descriptor instead.
func (*RiskCheckResponse) Descriptor() ([]byte, []int) {
	return file_proto_risk_risk_proto_rawDescGZIP(), []int{1}
}

func (x *RiskCheckResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *RiskCheckResponse) GetIsRisky() bool {
	if x != nil {
		return x.IsRisky
	}
	return false
}

func (x *RiskCheckResponse) GetRiskLevel() string {
	if x != nil {
		return x.RiskLevel
	}
	return ""
}

func (x *RiskCheckResponse) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *RiskCheckResponse) GetFlags() []string {
	if x != nil {
		return x.Flags
	}
	return nil
}

// NEW: Admin API messages
type RiskRule struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type          string                 `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`         // EMAIL_BLACKLIST, NAME_BLACKLIST, PATTERN_MATCH, DOMAIN_BLACKLIST, CONTAINS
	Category      string                 `protobuf:"bytes,4,opt,name=category,proto3" json:"category,omitempty"` // EMAIL, NAME, PHONE
	Value         string                 `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`       // The actual value or pattern
	Score         int32                  `protobuf:"varint,6,opt,name=score,proto3" json:"score,omitempty"`      // Risk score to add
	IsActive      bool                   `protobuf:"varint,7,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	Source        string                 `protobuf:"bytes,8,opt,name=source,proto3" json:"source,omitempty"`                          // MANUAL, EXTERNAL_API, ML_MODEL
	Confidence    float64                `protobuf:"fixed64,9,opt,name=confidence,proto3" json:"confidence,omitempty"`                // 0.0 to 1.0
	CreatedAt     int64                  `protobuf:"varint,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"` // Unix timestamp
	UpdatedAt     int64                  `protobuf:"varint,11,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"` // Unix timestamp
	ExpiresAt     int64                  `protobuf:"varint,12,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"` // Unix timestamp (0 = never expires)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RiskRule) Reset() {
	*x = RiskRule{}
	mi := &file_proto_risk_risk_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RiskRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiskRule) ProtoMessage() {}

func (x *RiskRule) ProtoReflect() protoreflect.Message {
	mi := &file_proto_risk_risk_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiskRule.ProtoReflect.Descriptor instead.
func (*RiskRule) Descriptor() ([]byte, []int) {
	return file_proto_risk_risk_proto_rawDescGZIP(), []int{2}
}

func (x *RiskRule) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RiskRule) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RiskRule) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *RiskRule) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *RiskRule) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *RiskRule) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *RiskRule) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *RiskRule) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *RiskRule) GetConfidence() float64 {
	if x != nil {
		return x.Confidence
	}
	return 0
}

func (x *RiskRule) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *RiskRule) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *RiskRule) GetExpiresAt() int64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

type CreateRiskRuleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type          string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Category      string                 `protobuf:"bytes,3,opt,name=category,proto3" json:"category,omitempty"`
	Value         string                 `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
	Score         int32                  `protobuf:"varint,5,opt,name=score,proto3" json:"score,omitempty"`
	IsActive      bool                   `protobuf:"varint,6,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	Confidence    float64                `protobuf:"fixed64,7,opt,name=confidence,proto3" json:"confidence,omitempty"`
	ExpiresInDays int32                  `protobuf:"varint,8,opt,name=expires_in_days,json=expiresInDays,proto3" json:"expires_in_days,omitempty"` // 0 = never expires
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateRiskRuleRequest) Reset() {
	*x = CreateRiskRuleRequest{}
	mi := &file_proto_risk_risk_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRiskRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRiskRuleRequest) ProtoMessage() {}

func (x *CreateRiskRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_risk_risk_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRiskRuleRequest.ProtoReflect.Descriptor instead.
func (*CreateRiskRuleRequest) Descriptor() ([]byte, []int) {
	return file_proto_risk_risk_proto_rawDescGZIP(), []int{3}
}

func (x *CreateRiskRuleRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateRiskRuleRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *CreateRiskRuleRequest) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *CreateRiskRuleRequest) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *CreateRiskRuleRequest) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *CreateRiskRuleRequest) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *CreateRiskRuleRequest) GetConfidence() float64 {
	if x != nil {
		return x.Confidence
	}
	return 0
}

func (x *CreateRiskRuleRequest) GetExpiresInDays() int32 {
	if x != nil {
		return x.ExpiresInDays
	}
	return 0
}

type CreateRiskRuleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RuleId        string                 `protobuf:"bytes,1,opt,name=rule_id,json=ruleId,proto3" json:"rule_id,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Error         string                 `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateRiskRuleResponse) Reset() {
	*x = CreateRiskRuleResponse{}
	mi := &file_proto_risk_risk_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRiskRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRiskRuleResponse) ProtoMessage() {}

func (x *CreateRiskRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_risk_risk_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRiskRuleResponse.ProtoReflect.Descriptor instead.
func (*CreateRiskRuleResponse) Descriptor() ([]byte, []int) {
	return file_proto_risk_risk_proto_rawDescGZIP(), []int{4}
}

func (x *CreateRiskRuleResponse) GetRuleId() string {
	if x != nil {
		return x.RuleId
	}
	return ""
}

func (x *CreateRiskRuleResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CreateRiskRuleResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type UpdateRiskRuleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RuleId        string                 `protobuf:"bytes,1,opt,name=rule_id,json=ruleId,proto3" json:"rule_id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type          string                 `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Category      string                 `protobuf:"bytes,4,opt,name=category,proto3" json:"category,omitempty"`
	Value         string                 `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	Score         int32                  `protobuf:"varint,6,opt,name=score,proto3" json:"score,omitempty"`
	IsActive      bool                   `protobuf:"varint,7,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	Confidence    float64                `protobuf:"fixed64,8,opt,name=confidence,proto3" json:"confidence,omitempty"`
	ExpiresInDays int32                  `protobuf:"varint,9,opt,name=expires_in_days,json=expiresInDays,proto3" json:"expires_in_days,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateRiskRuleRequest) Reset() {
	*x = UpdateRiskRuleRequest{}
	mi := &file_proto_risk_risk_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateRiskRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRiskRuleRequest) ProtoMessage() {}

func (x *UpdateRiskRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_risk_risk_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRiskRuleRequest.ProtoReflect.Descriptor instead.
func (*UpdateRiskRuleRequest) Descriptor() ([]byte, []int) {
	return file_proto_risk_risk_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateRiskRuleRequest) GetRuleId() string {
	if x != nil {
		return x.RuleId
	}
	return ""
}

func (x *UpdateRiskRuleRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateRiskRuleRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *UpdateRiskRuleRequest) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *UpdateRiskRuleRequest) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *UpdateRiskRuleRequest) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *UpdateRiskRuleRequest) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *UpdateRiskRuleRequest) GetConfidence() float64 {
	if x != nil {
		return x.Confidence
	}
	return 0
}

func (x *UpdateRiskRuleRequest) GetExpiresInDays() int32 {
	if x != nil {
		return x.ExpiresInDays
	}
	return 0
}

type UpdateRiskRuleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateRiskRuleResponse) Reset() {
	*x = UpdateRiskRuleResponse{}
	mi := &file_proto_risk_risk_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateRiskRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRiskRuleResponse) ProtoMessage() {}

func (x *UpdateRiskRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_risk_risk_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRiskRuleResponse.ProtoReflect.Descriptor instead.
func (*UpdateRiskRuleResponse) Descriptor() ([]byte, []int) {
	return file_proto_risk_risk_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateRiskRuleResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UpdateRiskRuleResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type DeleteRiskRuleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RuleId        string                 `protobuf:"bytes,1,opt,name=rule_id,json=ruleId,proto3" json:"rule_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRiskRuleRequest) Reset() {
	*x = DeleteRiskRuleRequest{}
	mi := &file_proto_risk_risk_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRiskRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRiskRuleRequest) ProtoMessage() {}

func (x *DeleteRiskRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_risk_risk_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRiskRuleRequest.ProtoReflect.Descriptor instead.
func (*DeleteRiskRuleRequest) Descriptor() ([]byte, []int) {
	return file_proto_risk_risk_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteRiskRuleRequest) GetRuleId() string {
	if x != nil {
		return x.RuleId
	}
	return ""
}

type DeleteRiskRuleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRiskRuleResponse) Reset() {
	*x = DeleteRiskRuleResponse{}
	mi := &file_proto_risk_risk_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRiskRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRiskRuleResponse) ProtoMessage() {}

func (x *DeleteRiskRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_risk_risk_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRiskRuleResponse.ProtoReflect.Descriptor instead.
func (*DeleteRiskRuleResponse) Descriptor() ([]byte, []int) {
	return file_proto_risk_risk_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteRiskRuleResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DeleteRiskRuleResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type ListRiskRulesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Category      string                 `protobuf:"bytes,1,opt,name=category,proto3" json:"category,omitempty"`                        // Optional: filter by category
	Type          string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`                                // Optional: filter by type
	ActiveOnly    bool                   `protobuf:"varint,3,opt,name=active_only,json=activeOnly,proto3" json:"active_only,omitempty"` // Default: true
	Page          int32                  `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`                               // Pagination
	PageSize      int32                  `protobuf:"varint,5,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`       // Pagination
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRiskRulesRequest) Reset() {
	*x = ListRiskRulesRequest{}
	mi := &file_proto_risk_risk_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRiskRulesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRiskRulesRequest) ProtoMessage() {}

func (x *ListRiskRulesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_risk_risk_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRiskRulesRequest.ProtoReflect.Descriptor instead.
func (*ListRiskRulesRequest) Descriptor() ([]byte, []int) {
	return file_proto_risk_risk_proto_rawDescGZIP(), []int{9}
}

func (x *ListRiskRulesRequest) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *ListRiskRulesRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ListRiskRulesRequest) GetActiveOnly() bool {
	if x != nil {
		return x.ActiveOnly
	}
	return false
}

func (x *ListRiskRulesRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListRiskRulesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ListRiskRulesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Rules         []*RiskRule            `protobuf:"bytes,1,rep,name=rules,proto3" json:"rules,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	Page          int32                  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      int32                  `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRiskRulesResponse) Reset() {
	*x = ListRiskRulesResponse{}
	mi := &file_proto_risk_risk_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRiskRulesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRiskRulesResponse) ProtoMessage() {}

func (x *ListRiskRulesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_risk_risk_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRiskRulesResponse.ProtoReflect.Descriptor instead.
func (*ListRiskRulesResponse) Descriptor() ([]byte, []int) {
	return file_proto_risk_risk_proto_rawDescGZIP(), []int{10}
}

func (x *ListRiskRulesResponse) GetRules() []*RiskRule {
	if x != nil {
		return x.Rules
	}
	return nil
}

func (x *ListRiskRulesResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *ListRiskRulesResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListRiskRulesResponse) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type GetRiskStatsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Days          int32                  `protobuf:"varint,1,opt,name=days,proto3" json:"days,omitempty"` // Stats for last N days
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRiskStatsRequest) Reset() {
	*x = GetRiskStatsRequest{}
	mi := &file_proto_risk_risk_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRiskStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRiskStatsRequest) ProtoMessage() {}

func (x *GetRiskStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_risk_risk_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRiskStatsRequest.ProtoReflect.Descriptor instead.
func (*GetRiskStatsRequest) Descriptor() ([]byte, []int) {
	return file_proto_risk_risk_proto_rawDescGZIP(), []int{11}
}

func (x *GetRiskStatsRequest) GetDays() int32 {
	if x != nil {
		return x.Days
	}
	return 0
}

type RiskStats struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TotalChecks   int32                  `protobuf:"varint,1,opt,name=total_checks,json=totalChecks,proto3" json:"total_checks,omitempty"`
	RiskyUsers    int32                  `protobuf:"varint,2,opt,name=risky_users,json=riskyUsers,proto3" json:"risky_users,omitempty"`
	RiskRate      float64                `protobuf:"fixed64,3,opt,name=risk_rate,json=riskRate,proto3" json:"risk_rate,omitempty"`
	AvgRiskScore  float64                `protobuf:"fixed64,4,opt,name=avg_risk_score,json=avgRiskScore,proto3" json:"avg_risk_score,omitempty"`
	TopFlags      []*FlagCount           `protobuf:"bytes,5,rep,name=top_flags,json=topFlags,proto3" json:"top_flags,omitempty"`
	TrendData     []*TrendPoint          `protobuf:"bytes,6,rep,name=trend_data,json=trendData,proto3" json:"trend_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RiskStats) Reset() {
	*x = RiskStats{}
	mi := &file_proto_risk_risk_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RiskStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiskStats) ProtoMessage() {}

func (x *RiskStats) ProtoReflect() protoreflect.Message {
	mi := &file_proto_risk_risk_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiskStats.ProtoReflect.Descriptor instead.
func (*RiskStats) Descriptor() ([]byte, []int) {
	return file_proto_risk_risk_proto_rawDescGZIP(), []int{12}
}

func (x *RiskStats) GetTotalChecks() int32 {
	if x != nil {
		return x.TotalChecks
	}
	return 0
}

func (x *RiskStats) GetRiskyUsers() int32 {
	if x != nil {
		return x.RiskyUsers
	}
	return 0
}

func (x *RiskStats) GetRiskRate() float64 {
	if x != nil {
		return x.RiskRate
	}
	return 0
}

func (x *RiskStats) GetAvgRiskScore() float64 {
	if x != nil {
		return x.AvgRiskScore
	}
	return 0
}

func (x *RiskStats) GetTopFlags() []*FlagCount {
	if x != nil {
		return x.TopFlags
	}
	return nil
}

func (x *RiskStats) GetTrendData() []*TrendPoint {
	if x != nil {
		return x.TrendData
	}
	return nil
}

type FlagCount struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Flag          string                 `protobuf:"bytes,1,opt,name=flag,proto3" json:"flag,omitempty"`
	Count         int32                  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FlagCount) Reset() {
	*x = FlagCount{}
	mi := &file_proto_risk_risk_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FlagCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlagCount) ProtoMessage() {}

func (x *FlagCount) ProtoReflect() protoreflect.Message {
	mi := &file_proto_risk_risk_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlagCount.ProtoReflect.Descriptor instead.
func (*FlagCount) Descriptor() ([]byte, []int) {
	return file_proto_risk_risk_proto_rawDescGZIP(), []int{13}
}

func (x *FlagCount) GetFlag() string {
	if x != nil {
		return x.Flag
	}
	return ""
}

func (x *FlagCount) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type TrendPoint struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Date          string                 `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"` // YYYY-MM-DD format
	RiskCount     int32                  `protobuf:"varint,2,opt,name=risk_count,json=riskCount,proto3" json:"risk_count,omitempty"`
	TotalCount    int32                  `protobuf:"varint,3,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TrendPoint) Reset() {
	*x = TrendPoint{}
	mi := &file_proto_risk_risk_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TrendPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrendPoint) ProtoMessage() {}

func (x *TrendPoint) ProtoReflect() protoreflect.Message {
	mi := &file_proto_risk_risk_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrendPoint.ProtoReflect.Descriptor instead.
func (*TrendPoint) Descriptor() ([]byte, []int) {
	return file_proto_risk_risk_proto_rawDescGZIP(), []int{14}
}

func (x *TrendPoint) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *TrendPoint) GetRiskCount() int32 {
	if x != nil {
		return x.RiskCount
	}
	return 0
}

func (x *TrendPoint) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type GetRiskStatsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Stats         *RiskStats             `protobuf:"bytes,1,opt,name=stats,proto3" json:"stats,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Error         string                 `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRiskStatsResponse) Reset() {
	*x = GetRiskStatsResponse{}
	mi := &file_proto_risk_risk_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRiskStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRiskStatsResponse) ProtoMessage() {}

func (x *GetRiskStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_risk_risk_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRiskStatsResponse.ProtoReflect.Descriptor instead.
func (*GetRiskStatsResponse) Descriptor() ([]byte, []int) {
	return file_proto_risk_risk_proto_rawDescGZIP(), []int{15}
}

func (x *GetRiskStatsResponse) GetStats() *RiskStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

func (x *GetRiskStatsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetRiskStatsResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

var File_proto_risk_risk_proto protoreflect.FileDescriptor

const file_proto_risk_risk_proto_rawDesc = "" +
	"\n" +
	"\x15proto/risk/risk.proto\x12\x04risk\"\x93\x01\n" +
	"\x10RiskCheckRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x14\n" +
	"\x05email\x18\x02 \x01(\tR\x05email\x12\x1d\n" +
	"\n" +
	"first_name\x18\x03 \x01(\tR\tfirstName\x12\x1b\n" +
	"\tlast_name\x18\x04 \x01(\tR\blastName\x12\x14\n" +
	"\x05phone\x18\x05 \x01(\tR\x05phone\"\x94\x01\n" +
	"\x11RiskCheckResponse\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x19\n" +
	"\bis_risky\x18\x02 \x01(\bR\aisRisky\x12\x1d\n" +
	"\n" +
	"risk_level\x18\x03 \x01(\tR\triskLevel\x12\x16\n" +
	"\x06reason\x18\x04 \x01(\tR\x06reason\x12\x14\n" +
	"\x05flags\x18\x05 \x03(\tR\x05flags\"\xbc\x02\n" +
	"\bRiskRule\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x12\n" +
	"\x04type\x18\x03 \x01(\tR\x04type\x12\x1a\n" +
	"\bcategory\x18\x04 \x01(\tR\bcategory\x12\x14\n" +
	"\x05value\x18\x05 \x01(\tR\x05value\x12\x14\n" +
	"\x05score\x18\x06 \x01(\x05R\x05score\x12\x1b\n" +
	"\tis_active\x18\a \x01(\bR\bisActive\x12\x16\n" +
	"\x06source\x18\b \x01(\tR\x06source\x12\x1e\n" +
	"\n" +
	"confidence\x18\t \x01(\x01R\n" +
	"confidence\x12\x1d\n" +
	"\n" +
	"created_at\x18\n" +
	" \x01(\x03R\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\v \x01(\x03R\tupdatedAt\x12\x1d\n" +
	"\n" +
	"expires_at\x18\f \x01(\x03R\texpiresAt\"\xec\x01\n" +
	"\x15CreateRiskRuleRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x12\x1a\n" +
	"\bcategory\x18\x03 \x01(\tR\bcategory\x12\x14\n" +
	"\x05value\x18\x04 \x01(\tR\x05value\x12\x14\n" +
	"\x05score\x18\x05 \x01(\x05R\x05score\x12\x1b\n" +
	"\tis_active\x18\x06 \x01(\bR\bisActive\x12\x1e\n" +
	"\n" +
	"confidence\x18\a \x01(\x01R\n" +
	"confidence\x12&\n" +
	"\x0fexpires_in_days\x18\b \x01(\x05R\rexpiresInDays\"a\n" +
	"\x16CreateRiskRuleResponse\x12\x17\n" +
	"\arule_id\x18\x01 \x01(\tR\x06ruleId\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x03 \x01(\tR\x05error\"\x85\x02\n" +
	"\x15UpdateRiskRuleRequest\x12\x17\n" +
	"\arule_id\x18\x01 \x01(\tR\x06ruleId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x12\n" +
	"\x04type\x18\x03 \x01(\tR\x04type\x12\x1a\n" +
	"\bcategory\x18\x04 \x01(\tR\bcategory\x12\x14\n" +
	"\x05value\x18\x05 \x01(\tR\x05value\x12\x14\n" +
	"\x05score\x18\x06 \x01(\x05R\x05score\x12\x1b\n" +
	"\tis_active\x18\a \x01(\bR\bisActive\x12\x1e\n" +
	"\n" +
	"confidence\x18\b \x01(\x01R\n" +
	"confidence\x12&\n" +
	"\x0fexpires_in_days\x18\t \x01(\x05R\rexpiresInDays\"H\n" +
	"\x16UpdateRiskRuleResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"0\n" +
	"\x15DeleteRiskRuleRequest\x12\x17\n" +
	"\arule_id\x18\x01 \x01(\tR\x06ruleId\"H\n" +
	"\x16DeleteRiskRuleResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"\x98\x01\n" +
	"\x14ListRiskRulesRequest\x12\x1a\n" +
	"\bcategory\x18\x01 \x01(\tR\bcategory\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x12\x1f\n" +
	"\vactive_only\x18\x03 \x01(\bR\n" +
	"activeOnly\x12\x12\n" +
	"\x04page\x18\x04 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x05 \x01(\x05R\bpageSize\"\x8f\x01\n" +
	"\x15ListRiskRulesResponse\x12$\n" +
	"\x05rules\x18\x01 \x03(\v2\x0e.risk.RiskRuleR\x05rules\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\x12\x12\n" +
	"\x04page\x18\x03 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x04 \x01(\x05R\bpageSize\")\n" +
	"\x13GetRiskStatsRequest\x12\x12\n" +
	"\x04days\x18\x01 \x01(\x05R\x04days\"\xf1\x01\n" +
	"\tRiskStats\x12!\n" +
	"\ftotal_checks\x18\x01 \x01(\x05R\vtotalChecks\x12\x1f\n" +
	"\vrisky_users\x18\x02 \x01(\x05R\n" +
	"riskyUsers\x12\x1b\n" +
	"\trisk_rate\x18\x03 \x01(\x01R\briskRate\x12$\n" +
	"\x0eavg_risk_score\x18\x04 \x01(\x01R\favgRiskScore\x12,\n" +
	"\ttop_flags\x18\x05 \x03(\v2\x0f.risk.FlagCountR\btopFlags\x12/\n" +
	"\n" +
	"trend_data\x18\x06 \x03(\v2\x10.risk.TrendPointR\ttrendData\"5\n" +
	"\tFlagCount\x12\x12\n" +
	"\x04flag\x18\x01 \x01(\tR\x04flag\x12\x14\n" +
	"\x05count\x18\x02 \x01(\x05R\x05count\"`\n" +
	"\n" +
	"TrendPoint\x12\x12\n" +
	"\x04date\x18\x01 \x01(\tR\x04date\x12\x1d\n" +
	"\n" +
	"risk_count\x18\x02 \x01(\x05R\triskCount\x12\x1f\n" +
	"\vtotal_count\x18\x03 \x01(\x05R\n" +
	"totalCount\"m\n" +
	"\x14GetRiskStatsResponse\x12%\n" +
	"\x05stats\x18\x01 \x01(\v2\x0f.risk.RiskStatsR\x05stats\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x03 \x01(\tR\x05error2K\n" +
	"\vRiskService\x12<\n" +
	"\tCheckRisk\x12\x16.risk.RiskCheckRequest\x1a\x17.risk.RiskCheckResponse2\x8a\x03\n" +
	"\x10RiskAdminService\x12K\n" +
	"\x0eCreateRiskRule\x12\x1b.risk.CreateRiskRuleRequest\x1a\x1c.risk.CreateRiskRuleResponse\x12K\n" +
	"\x0eUpdateRiskRule\x12\x1b.risk.UpdateRiskRuleRequest\x1a\x1c.risk.UpdateRiskRuleResponse\x12K\n" +
	"\x0eDeleteRiskRule\x12\x1b.risk.DeleteRiskRuleRequest\x1a\x1c.risk.DeleteRiskRuleResponse\x12H\n" +
	"\rListRiskRules\x12\x1a.risk.ListRiskRulesRequest\x1a\x1b.risk.ListRiskRulesResponse\x12E\n" +
	"\fGetRiskStats\x12\x19.risk.GetRiskStatsRequest\x1a\x1a.risk.GetRiskStatsResponseB\x1dZ\x1buser-risk-system/proto/riskb\x06proto3"

var (
	file_proto_risk_risk_proto_rawDescOnce sync.Once
	file_proto_risk_risk_proto_rawDescData []byte
)

func file_proto_risk_risk_proto_rawDescGZIP() []byte {
	file_proto_risk_risk_proto_rawDescOnce.Do(func() {
		file_proto_risk_risk_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_risk_risk_proto_rawDesc), len(file_proto_risk_risk_proto_rawDesc)))
	})
	return file_proto_risk_risk_proto_rawDescData
}

var file_proto_risk_risk_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_proto_risk_risk_proto_goTypes = []any{
	(*RiskCheckRequest)(nil),       // 0: risk.RiskCheckRequest
	(*RiskCheckResponse)(nil),      // 1: risk.RiskCheckResponse
	(*RiskRule)(nil),               // 2: risk.RiskRule
	(*CreateRiskRuleRequest)(nil),  // 3: risk.CreateRiskRuleRequest
	(*CreateRiskRuleResponse)(nil), // 4: risk.CreateRiskRuleResponse
	(*UpdateRiskRuleRequest)(nil),  // 5: risk.UpdateRiskRuleRequest
	(*UpdateRiskRuleResponse)(nil), // 6: risk.UpdateRiskRuleResponse
	(*DeleteRiskRuleRequest)(nil),  // 7: risk.DeleteRiskRuleRequest
	(*DeleteRiskRuleResponse)(nil), // 8: risk.DeleteRiskRuleResponse
	(*ListRiskRulesRequest)(nil),   // 9: risk.ListRiskRulesRequest
	(*ListRiskRulesResponse)(nil),  // 10: risk.ListRiskRulesResponse
	(*GetRiskStatsRequest)(nil),    // 11: risk.GetRiskStatsRequest
	(*RiskStats)(nil),              // 12: risk.RiskStats
	(*FlagCount)(nil),              // 13: risk.FlagCount
	(*TrendPoint)(nil),             // 14: risk.TrendPoint
	(*GetRiskStatsResponse)(nil),   // 15: risk.GetRiskStatsResponse
}
var file_proto_risk_risk_proto_depIdxs = []int32{
	2,  // 0: risk.ListRiskRulesResponse.rules:type_name -> risk.RiskRule
	13, // 1: risk.RiskStats.top_flags:type_name -> risk.FlagCount
	14, // 2: risk.RiskStats.trend_data:type_name -> risk.TrendPoint
	12, // 3: risk.GetRiskStatsResponse.stats:type_name -> risk.RiskStats
	0,  // 4: risk.RiskService.CheckRisk:input_type -> risk.RiskCheckRequest
	3,  // 5: risk.RiskAdminService.CreateRiskRule:input_type -> risk.CreateRiskRuleRequest
	5,  // 6: risk.RiskAdminService.UpdateRiskRule:input_type -> risk.UpdateRiskRuleRequest
	7,  // 7: risk.RiskAdminService.DeleteRiskRule:input_type -> risk.DeleteRiskRuleRequest
	9,  // 8: risk.RiskAdminService.ListRiskRules:input_type -> risk.ListRiskRulesRequest
	11, // 9: risk.RiskAdminService.GetRiskStats:input_type -> risk.GetRiskStatsRequest
	1,  // 10: risk.RiskService.CheckRisk:output_type -> risk.RiskCheckResponse
	4,  // 11: risk.RiskAdminService.CreateRiskRule:output_type -> risk.CreateRiskRuleResponse
	6,  // 12: risk.RiskAdminService.UpdateRiskRule:output_type -> risk.UpdateRiskRuleResponse
	8,  // 13: risk.RiskAdminService.DeleteRiskRule:output_type -> risk.DeleteRiskRuleResponse
	10, // 14: risk.RiskAdminService.ListRiskRules:output_type -> risk.ListRiskRulesResponse
	15, // 15: risk.RiskAdminService.GetRiskStats:output_type -> risk.GetRiskStatsResponse
	10, // [10:16] is the sub-list for method output_type
	4,  // [4:10] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_proto_risk_risk_proto_init() }
func file_proto_risk_risk_proto_init() {
	if File_proto_risk_risk_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_risk_risk_proto_rawDesc), len(file_proto_risk_risk_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_proto_risk_risk_proto_goTypes,
		DependencyIndexes: file_proto_risk_risk_proto_depIdxs,
		MessageInfos:      file_proto_risk_risk_proto_msgTypes,
	}.Build()
	File_proto_risk_risk_proto = out.File
	file_proto_risk_risk_proto_goTypes = nil
	file_proto_risk_risk_proto_depIdxs = nil
}
